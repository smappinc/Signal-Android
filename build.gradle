buildscript {
    ext.kotlin_version = '1.4.32'
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        jcenter {
            content {
                includeVersion 'org.jetbrains.trove4j', 'trove4j', '20160824'
                includeGroupByRegex "com\\.archinamon.*"
            }
        }
        maven {
            url "https://plugins.gradle.org/m2/"
            content {
                includeGroupByRegex "org\\.jlleitschuh\\.gradle.*"
            }
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath 'androidx.navigation:navigation-safe-args-gradle-plugin:2.1.0'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.10'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:10.0.0"
        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:[0.12.10, 0.99.99]'
    }
}

ext {
    BUILD_TOOL_VERSION = '30.0.2'

    COMPILE_SDK = 30
    TARGET_SDK  = 30
    MINIMUM_SDK = 19

    JAVA_VERSION = JavaVersion.VERSION_1_8
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    afterEvaluate { Project p ->
        List<String> androidPlugins = ["android", "com.android.application", "android-library", "com.android.library",
                                       "com.android.test", "com.android.feature", "com.android.dynamic-feature", "com.android.instantapp"]

        boolean isAndroidProject = false
        for(String s: androidPlugins) {
            if (p.plugins.findPlugin(s)) {
                isAndroidProject = true
                break;
            }
        }

        if (!isAndroidProject) {
            p.tasks.withType(JavaCompile).all {
                it.options.compilerArgs += ['--release', '8']
            }
        }
    }


}

subprojects {
    ext.lib_signal_service_version_number   = "2.15.3"
    ext.lib_signal_service_group_info       = "org.whispersystems"
    ext.lib_signal_client_version           = "0.1.0"

    if (JavaVersion.current().isJava8Compatible()) {
        allprojects {
            tasks.withType(Javadoc) {
                options.addStringOption('Xdoclint:none', '-quiet')
            }
        }
    }

    if (project.name != "Signal-Android" && project.name != "libsignal-service" && project.name != "lintchecks" && !project.name.endsWith("-app")) {
        task qa {
            group 'Verification'
            description 'Quality Assurance. Run before pushing'
            dependsOn 'testReleaseUnitTest', 'lintRelease'
        }
    }
}

task qa {
    group 'Verification'
    description 'Quality Assurance. Run before pushing.'
    dependsOn ':Signal-Android:testPlayProdReleaseUnitTest',
            ':Signal-Android:lintPlayProdRelease',
            'Signal-Android:ktlintCheck',
            ':libsignal-service:test',
            ':Signal-Android:assemblePlayProdDebug'
}
